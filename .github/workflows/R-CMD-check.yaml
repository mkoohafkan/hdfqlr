# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macos-latest,   r: 'release'}
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-latest,   r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-latest,   r: 'release'}
          - {os: ubuntu-latest,   r: 'oldrel-1'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - uses: actions/checkout@v3

#      - uses: r-lib/actions/setup-pandoc@v2
#
#      - uses: r-lib/actions/setup-r@v2
#        with:
#          r-version: ${{ matrix.config.r }}
#          http-user-agent: ${{ matrix.config.http-user-agent }}
#          use-public-rspm: true
#
#      - uses: r-lib/actions/setup-r-dependencies@v2
#        with:
#          extra-packages: any::rcmdcheck
#          needs: check

      - name: Download HDFql
        run: |
          mkdir -p '${{ runner.temp }}/.hdfqlr/'
          if [ "$RUNNER_OS" == "Linux" ]; then
            curl -o '${{ runner.temp }}/.hdfqlr/HDFql.zip' \
              https://www.hdfql.com/releases/2.1.0/HDFql-2.1.0_Linux64_GCC-4.9.zip
          elif [ "$RUNNER_OS" == "Windows" ]; then
            curl -o '${{ runner.temp }}/.hdfqlr/HDFql.zip' \
              https://www.hdfql.com/releases/2.1.0/HDFql-2.1.0_Windows64_VS-2015.zip
          elif [ "$RUNNER_OS" == "macOS" ]; then
            curl -o '${{ runner.temp }}/.hdfqlr/HDFql.zip' \
              https://www.hdfql.com/releases/2.1.0/HDFql-2.1.0_Darwin64_GCC-4.9.zip 
          else
            echo "$RUNNER_OS not supported"
            exit 1
          fi
          7z x '${{ runner.temp }}/.hdfqlr/HDFql.zip' \
            -o'${{ runner.temp }}/.hdfqlr' -y
          echo "HDFQL_DIR=${{ runner.temp }}/.hdfqlr/hdfql-2.1.0" >> $GITHUB_ENV
          if [ "$RUNNER_OS" == "Linux" ]; then
            export LD_LIBRARY_PATH=$HDFQL_DIR/wrapper/R:$HDFQL_DIR/lib:$LD_LIBRARY_PATH
          elif [ "$RUNNER_OS" == "macOS" ]; then
            export DYLD_LIBRARY_PATH=$HDFQL_DIR/wrapper/R:$HDFQL_DIR/lib:$DYLD_LIBRARY_PATH
          fi
          echo '$HDFQL_DIR'
          ls -R '${{ runner.temp }}/.hdfqlr'
        shell: bash

#      - uses: r-lib/actions/check-r-package@v2
#        with:
#          upload-snapshots: true
